#include "Kernel.h"void ItoA(int64_t num, char* buffer, int base){		if (base < 2 || base > 36)		return;		if (num == 0)	{		buffer[0] = '0';		buffer[1] = 0;		return;	}		bool isNegative = false;		if (num < 0)	{		isNegative = true;		num = -num;	}	int i = 0;    while (num)	{        int rem = num % base;        buffer[i++] = (rem > 9) ? (rem - 10) + 'A' : rem + '0';        num /= base;    }	if (isNegative)		buffer[i++] = '-';    buffer[i] = 0;        for (int j = 0, k = i - 1; j < k; j++, k--)	{        char temp = buffer[j];        buffer[j] = buffer[k];        buffer[k] = temp;    }}void ItoA(int64_t num, char* buffer){	ItoA(num, buffer, 10);}int StrLen(char* str){	int i = 0;		while (str[i] != 0)		i++;		return i;}char* StrCat(char* dest, char* source){	int i = StrLen(dest);	int j = 0;		for ( ; source[j] != 0; j++)		dest[i + j] = source[j];	dest[i + j] = 0;		return dest;}